Features:
- loading recipe
- Pagination
- add recipe
- add/ remove bookmark


Components of any Architecture
- Business Logic: involves what the business does and what it needs e.g calculating taxes
- State: store data about the application, must be kept in sync with ui (state management library: redux, mob x)
- HTTP Library : responsible for making and recieving request , we use fetch()
- Application Logic (router): implmentation of the application, handling ui event and routing
- Presentation Logic : displaying application state to keep everything in sync.


Architecture(MVC, MVP, Flux)
We are using MVC 
Model: Business Logic & state (it can also contain http library because it need to get data from api)
View:for Presentation logic it interacts with the user
Controller: application logic, it connect model and view


Anything relate to the DOM or user view goes into the view
PUBLISHER_SUBSCRIBER PATTERN 
It is used to avoid having the Controller in the view.
Event handler should be handled by the controller functions in the controller

PUBLISHER:; a code that know when to react (add handler function)
SUBSCRIBER: code that react (thr controller)